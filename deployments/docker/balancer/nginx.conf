user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
	fastcgi_buffers 16 16k; 
	fastcgi_buffer_size 32k;
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    '$request_time $upstream_response_time $pipe $upstream_cache_status';

    access_log  /var/log/nginx/access.log  main;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;

    keepalive_timeout  65;
    server_tokens off;

    gzip on;
    gzip_static on;
    gzip_vary on;
    gzip_proxied any;
    gzip_types text/plain text/css text/js text/xml application/json application/javascript application/x-javascript
               application/xml application/xml+rss text/javascript application/vnd.ms-fontobject
               image/bmp image/png image/gif image/jpeg image/jpg
               application/x-font-ttf font/opentype image/svg+xml image/x-icon;
    gzip_comp_level 6;
    gzip_disable "msie6";

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    server {
        listen 8080 default_server;

        server_name _;

        location ~ ^/(api|bundles|_error|_wdt|_profiler)/ {
            proxy_pass http://backend-upstream;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_redirect off;
        }

        location ~ ^/ws$ {
            proxy_pass http://frontend-upstream;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_redirect off;
        }

        location / {
            proxy_pass http://frontend-upstream;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_redirect off;
        }
    }

    upstream backend-upstream {
        server nginx:8080;
    }

    upstream frontend-upstream {
        server frontend:8090;
    }

    include /etc/nginx/conf.d/*.conf;
}
